openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ixngapelvdinyeawxippgzytkrwaaajcdwayvvomwatezyvuzikikaechtwtexzgtzaycjvacmmprjdlfrumoxzldnzkqakfxq
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: auanjqtxlrqtplyixiwpfvigduhjnwagjbjteaggodmosvogeyuieispgjlyqwslibqzbnvyzgfaboiwufoihzbxpyqflrgvecnkjjnsrhqwbhlqqpzmdyuczoooeeokohjjaerwesppkrbtgrglstaqkjuostusqccgceurzqpyaplxppqkenfwpuxaumrrxzglvuiyzdqonthiusqzcxglwtxh
                password:
                  type: string
                  description: ''
                  example: sequi
              required:
                - name
                - email
                - password
      security: []
  /api/me:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/labels:
    get:
      summary: 'Display a listing of the label collection belongs to logged-in user.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Labels
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Labels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the label.'
                  example: School
                user_id:
                  type: integer
                  description: 'The id of user who stores the label.'
                  example: 17
              required:
                - title
      security: []
  '/api/labels/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Labels
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Labels
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Labels
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the label.'
        example: excepturi
        required: true
        schema:
          type: string
  /api/tasks:
    get:
      summary: 'Display a listing of the tasks.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tasks
      security: []
    post:
      summary: 'Store a newly created task in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: ''
                  example: 53.97295
                title:
                  type: string
                  description: 'Title of the task.'
                  example: 'Go shopping'
                description:
                  type: string
                  description: 'TitDescriptionle of the task.'
                  example: 'Buy some milk,fruite and meat'
                task_id:
                  type: integer
                  description: 'Id of task for storing in tasklabels table.'
                  example: 7
                label_id:
                  type: integer
                  description: 'Id of label for storing in tasklabels table.'
                  example: 5
              required:
                - title
                - description
                - task_id
                - label_id
      security: []
  '/api/tasks/{id}':
    get:
      summary: 'Display the specified task.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'Id of the logged-in user to prevent showing other users task.'
                  example: 14
                id:
                  type: integer
                  description: 'Id of the task to get from table.'
                  example: 14
              required:
                - user_id
                - id
      security: []
    put:
      summary: 'Updating the given task'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'Id of the logged-in user to prevent showing other users task.'
                  example: 14
              required:
                - user_id
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tasks
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: corporis
        required: true
        schema:
          type: string
  /api/tasks/update:
    post:
      summary: 'Updating the given task'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'Id of the logged-in user to prevent showing other users task.'
                  example: 2
              required:
                - user_id
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Labels
    description: 'API endpoints for managing labels'
  -
    name: Tasks
    description: 'API endpoints for managing the tasks'
